[include fluidd.cfg]

[virtual_sdcard]
path: /home/oisqintursotin/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[include moonraker_obico_macros.cfg]

[force_move]
enable_force_move = True

[display_status]

[exclude_object]

[virtual_sdcard]
path = /home/oisqintursotin/printer_data/gcodes

[pause_resume]

[gcode_arcs]
resolution = 0.1

#[spoolman]
#server: http://192.168.3.47:7912
#sync_rate: 5

[temperature_sensor raspberry_pi]
sensor_type = temperature_host
min_temp = 10
max_temp = 100

[stepper_x]
step_pin = PF0
dir_pin = !PF1
enable_pin = !PD7
microsteps = 16
rotation_distance = 40
endstop_pin = ^!PE5
position_endstop = 0
position_min = -7
position_max = 225
homing_speed = 30.0

[stepper_y]
step_pin = PF6
dir_pin = PF7
enable_pin = !PF2
microsteps = 16
rotation_distance = 40
endstop_pin = ^!PL7
position_endstop = 0.9
position_max = 225
homing_speed = 30.0

[stepper_z]
step_pin = PL3
dir_pin = PL1
enable_pin = !PK0
microsteps = 16
rotation_distance = 8
endstop_pin = probe:z_virtual_endstop
position_max = 205
homing_speed = 5.0
position_min = -15.75

[stepper_z1]
step_pin = PC1
dir_pin = PC3
enable_pin = !PC7
microsteps = 16
rotation_distance = 8

[probe]
pin = ^PD3
x_offset = 0
y_offset = 0
speed = 8.0
samples = 2
sample_retract_dist = 3
samples_result = median
samples_tolerance = 0.010
samples_tolerance_retries = 2
#z_offset = 0

[bed_mesh]
speed = 100
horizontal_move_z = 20
mesh_min = 10,6
mesh_max = 208,202
probe_count = 5,5
adaptive_margin = 5
mesh_pps = 2,2
algorithm = bicubic
bicubic_tension = 0.2
fade_start = 1.0
fade_end = 10.0
move_check_distance = 3
split_delta_z = .025

[axis_twist_compensation]
calibrate_start_x = 20
calibrate_end_x = 210
calibrate_y = 100
z_compensations = 0.014583, -0.000417, -0.014167
compensation_start_x = 20.0
compensation_end_x = 210.0

[z_tilt]
z_positions = 
	-4,100
	228,100
points = 
	8,100
	210,100
speed = 60
horizontal_move_z = 15
retries = 5
retry_tolerance = 0.05

[bed_screws]
screw1 = 5,6
screw2 = 5,210
screw3 = 213,210
screw4 = 213,6

[screws_tilt_adjust]
screw1 = 10,6
screw1_name = front left screw
screw2 = 4,210
screw2_name = back left screw
screw3 = 213,210
screw3_name = back right screw
screw4 = 205,6
screw4_name = front right screw
horizontal_move_z = 18

[extruder]
step_pin = PA4
dir_pin = PA6
enable_pin = !PA2
microsteps = 16
rotation_distance = 7.7673975
nozzle_diameter = 0.400
filament_diameter = 1.750
heater_pin = PB4
sensor_type = ATC Semitec 104GT-2
sensor_pin = PK5
min_temp = 0
max_temp = 245
pressure_advance = 0.03
max_extrude_only_distance = 101
pwm_cycle_time = 0.02
max_extrude_cross_section = 2.9
control = pid
pid_kp = 23.960
pid_ki = 1.238
pid_kd = 115.906

[heater_bed]
heater_pin = PH5
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PK6
min_temp = 0
max_temp = 110
pwm_cycle_time = 0.02
control = pid
pid_kp = 72.125
pid_ki = 1.498
pid_kd = 868.207

[fan]
pin = PH6

[mcu]
serial = /dev/ttyUSB0

[printer]
kinematics = cartesian
max_velocity = 500
max_accel = 4500
max_z_velocity = 15
max_z_accel = 60


#[controller_fan stepstick_fan]
#pin = PH4
#stepper = stepper_z, stepper_y, stepper_x, extruder
#heater = extruder
#idle_timeout = 45
#idle_speed = 1
#fan_speed = 1
#kick_start_time = 0.250
#shutdown_speed = 1.0

########################################
# Fan Definition
########################################
[fan_generic smart_fan]
pin: PH4
cycle_time: 0.01
shutdown_speed: 0

########################################
# Flag Storage
########################################
[gcode_macro FAN_FLAGS]
variable_movement: 0
variable_hotend: 0
variable_hotend_monitor_initialized: 0
variable_movement_monitor_initialized: 0
variable_all_initialized: 0
variable_fan_state: 0
gcode:
#  RESPOND MSG="Flags ‚Üí movement:{movement} hotend:{hotend}"
#  RESPOND MSG="Initialized ‚Üí hotend_initialized: {hotend_monitor_initialized} movement initialized: {movement_monitor_initialized}"
  UPDATE_DELAYED_GCODE ID=flag_states DURATION=1

########################################
# Manual Flag Toggles (Debug)
########################################
[gcode_macro SET_MOVEMENT_FLAG_ON]
gcode:
  SET_GCODE_VARIABLE MACRO=FAN_FLAGS VARIABLE=movement VALUE=1
  UPDATE_DELAYED_GCODE ID=smart_fan_control DURATION=1
  RESPOND MSG="‚úÖ Movement flag manually set to ON"

[gcode_macro SET_MOVEMENT_FLAG_OFF]
gcode:
  SET_GCODE_VARIABLE MACRO=FAN_FLAGS VARIABLE=movement VALUE=0
  UPDATE_DELAYED_GCODE ID=smart_fan_control DURATION=1
  RESPOND MSG="‚ùå Movement flag manually set to OFF"

[gcode_macro SET_HOTEND_FLAG_ON]
gcode:
  SET_GCODE_VARIABLE MACRO=FAN_FLAGS VARIABLE=hotend VALUE=1
  UPDATE_DELAYED_GCODE ID=smart_fan_control DURATION=1
  RESPOND MSG="‚úÖ Hotend flag manually set to ON"

[gcode_macro SET_HOTEND_FLAG_OFF]
gcode:
  SET_GCODE_VARIABLE MACRO=FAN_FLAGS VARIABLE=hotend VALUE=0
  UPDATE_DELAYED_GCODE ID=smart_fan_control DURATION=1
  RESPOND MSG="‚ùå Hotend flag manually set to OFF"

########################################
# Pause / Resume Fan Logic
########################################
[gcode_macro STOP_MONITOR_LOOPS]
gcode:
  RESPOND MSG="üõë Stopping all monitor loops"
  UPDATE_DELAYED_GCODE ID=hotend_monitor DURATION=0
  UPDATE_DELAYED_GCODE ID=movement_monitor DURATION=0
  UPDATE_DELAYED_GCODE ID=smart_fan_control DURATION=0
  UPDATE_DELAYED_GCODE ID=flag_states DURATION=0

[gcode_macro START_MONITOR_LOOPS]
gcode:
  RESPOND MSG="üîÑ Manually restarting monitor loops"
  UPDATE_DELAYED_GCODE ID=hotend_monitor DURATION=1
  UPDATE_DELAYED_GCODE ID=movement_monitor DURATION=1
  UPDATE_DELAYED_GCODE ID=smart_fan_control DURATION=1
  UPDATE_DELAYED_GCODE ID=flag_states DURATION=1
  SET_GCODE_VARIABLE MACRO=FAN_FLAGS VARIABLE=movement_monitor_initialized VALUE=0
  SET_GCODE_VARIABLE MACRO=FAN_FLAGS VARIABLE=hotend_monitor_initialized VALUE=0
  SET_GCODE_VARIABLE MACRO=FAN_FLAGS VARIABLE=all_initialized VALUE=0


[gcode_macro MANUAL_FAN_ON]
gcode:
	SET_FAN_SPEED FAN=smart_fan SPEED=1.0
	RESPOND MSG="FAN ON!"

[gcode_macro MANUAL_FAN_OFF]
gcode:
	SET_FAN_SPEED FAN=smart_fan SPEED=0.0
	RESPOND MSG="FAN OFF!"

########################################
# Movement Tracker (Position Delta)
########################################

[gcode_macro MOVEMENT_TRACKER]
variable_last_x: 0.0
variable_last_y: 0.0
variable_last_z: 0.0
variable_threshold: 0.10
gcode:
  RESPOND MSG="Movement tracker variables only"

########################################
# Movement Monitor Loop
########################################
[delayed_gcode movement_monitor]
initial_duration: 5
gcode:
  {% set x = printer.toolhead.position.x|float %}
  {% set y = printer.toolhead.position.y|float %}
  {% set z = printer.toolhead.position.z|float %}
  {% set last_x = printer["gcode_macro MOVEMENT_TRACKER"].last_x|float %}
  {% set last_y = printer["gcode_macro MOVEMENT_TRACKER"].last_y|float %}
  {% set last_z = printer["gcode_macro MOVEMENT_TRACKER"].last_z|float %}
  {% set threshold = printer["gcode_macro MOVEMENT_TRACKER"].threshold|float %}
  {% set dx = (x - last_x)|abs %}
  {% set dy = (y - last_y)|abs %}
  {% set dz = (z - last_z)|abs %}
  {% set moved = dx > threshold or dy > threshold or dz > threshold %}
  {% set initialized = printer["gcode_macro FAN_FLAGS"].movement_monitor_initialized|int %}
  {% set movement_flag = printer["gcode_macro FAN_FLAGS"].movement|int %}

  {% if moved %}
    SET_GCODE_VARIABLE MACRO=FAN_FLAGS VARIABLE=movement VALUE=1
    UPDATE_DELAYED_GCODE ID=movement_monitor DURATION=600
	UPDATE_DELAYED_GCODE ID=smart_fan_control DURATION=1
    RESPOND MSG="Movement DETECTED!"
  {% else %}
    SET_GCODE_VARIABLE MACRO=FAN_FLAGS VARIABLE=movement VALUE=0
    UPDATE_DELAYED_GCODE ID=movement_monitor DURATION=10
	UPDATE_DELAYED_GCODE ID=smart_fan_control DURATION=1
	{% if movement_flag != 0 or initialized == 0 %}
      RESPOND MSG="No movement"
	  SET_GCODE_VARIABLE MACRO=FAN_FLAGS VARIABLE=movement_monitor_initialized VALUE=1
    {% endif %}
  {% endif %}

  SET_GCODE_VARIABLE MACRO=MOVEMENT_TRACKER VARIABLE=last_x VALUE={x}
  SET_GCODE_VARIABLE MACRO=MOVEMENT_TRACKER VARIABLE=last_y VALUE={y}
  SET_GCODE_VARIABLE MACRO=MOVEMENT_TRACKER VARIABLE=last_z VALUE={z}
  
  SET_GCODE_VARIABLE MACRO=FAN_FLAGS VARIABLE=movement_monitor_initialized VALUE=1

#########################################

[gcode_macro DUMP_MOVEMENT_STATE]
gcode:
  {% set x = printer.toolhead.position.x|float %}
  {% set y = printer.toolhead.position.y|float %}
  {% set z = printer.toolhead.position.z|float %}
  {% set last_x = printer["gcode_macro MOVEMENT_TRACKER"].last_x|float %}
  {% set last_y = printer["gcode_macro MOVEMENT_TRACKER"].last_y|float %}
  {% set last_z = printer["gcode_macro MOVEMENT_TRACKER"].last_z|float %}
  RESPOND MSG="üìç Current: X={x}, Y={y}, Z={z}"
  RESPOND MSG="üß† Last: X={last_x}, Y={last_y}, Z={last_z}"


########################################
# Hotend Monitor
########################################
[delayed_gcode hotend_monitor]
initial_duration: 10
gcode:
  {% set temp = printer.extruder.temperature|float %}
  {% set initialized = printer["gcode_macro FAN_FLAGS"].hotend_monitor_initialized|int %}
  {% set hotend_flag = printer["gcode_macro FAN_FLAGS"].hotend|int %}

  {% if temp > 50 %}
    RESPOND MSG="üî• Hotend above 50¬∞C ‚Üí hotend flag ON"
    SET_GCODE_VARIABLE MACRO=FAN_FLAGS VARIABLE=hotend VALUE=1
    UPDATE_DELAYED_GCODE ID=hotend_monitor DURATION=30
	UPDATE_DELAYED_GCODE ID=smart_fan_control DURATION=1
  {% else %}
    SET_GCODE_VARIABLE MACRO=FAN_FLAGS VARIABLE=hotend VALUE=0
    UPDATE_DELAYED_GCODE ID=hotend_monitor DURATION=15
	UPDATE_DELAYED_GCODE ID=smart_fan_control DURATION=1
    {% if hotend_flag != 0 or initialized == 0 %}
      RESPOND MSG="‚ùÑÔ∏è Hotend below 50¬∞C ‚Üí hotend flag OFF"
    {% endif %}
  {% endif %}

  SET_GCODE_VARIABLE MACRO=FAN_FLAGS VARIABLE=hotend_monitor_initialized VALUE=1

########################################
# Smart Fan Control Loop
########################################
[delayed_gcode smart_fan_control]
initial_duration: 5
gcode:
  {% set move = printer["gcode_macro FAN_FLAGS"].movement|int %}
  {% set hot = printer["gcode_macro FAN_FLAGS"].hotend|int %}
  {% set previous = printer["gcode_macro FAN_FLAGS"].fan_state|int %}
  {% set current = 1 if move == 1 or hot == 1 else 0 %}

#  RESPOND MSG="üß™ Flags ‚Üí move:{move} hot:{hot}"
  UPDATE_DELAYED_GCODE ID=smart_fan_control DURATION=120
  {% if current == 1 %}
    SET_FAN_SPEED FAN=smart_fan SPEED=1.0
    UPDATE_DELAYED_GCODE ID=smart_fan_control DURATION=120
    {% if previous == 0 %}
      RESPOND MSG="‚úÖ Fan ON triggered by flags"
    {% endif %}
  {% else %}
    SET_FAN_SPEED FAN=smart_fan SPEED=0.0
    {% if previous == 1 %}
      RESPOND MSG="üåô All flags OFF ‚Üí fan OFF"
    {% endif %}
  {% endif %}

  SET_GCODE_VARIABLE MACRO=FAN_FLAGS VARIABLE=fan_state VALUE={current}

[delayed_gcode flag_states]
initial_duration: 5
gcode:
  {% set movement = printer["gcode_macro FAN_FLAGS"].movement|int %}
  {% set hotend = printer["gcode_macro FAN_FLAGS"].hotend|int %}
  {% set fan_state = printer["gcode_macro FAN_FLAGS"].fan_state|int %}
  {% set hotend_monitor_initialized = printer["gcode_macro FAN_FLAGS"].hotend_monitor_initialized|int %}
  {% set movement_monitor_initialized = printer["gcode_macro FAN_FLAGS"].movement_monitor_initialized|int %}
  {% set all_initialized = printer["gcode_macro FAN_FLAGS"].all_initialized|int %}

	RESPOND MSG="Flags ‚Üí movement:{movement} hotend:{hotend} fan state:{fan_state}"
	  {% if all_initialized == 0 %}
        RESPOND MSG="Initialized ‚Üí hotend_initialized: {hotend_monitor_initialized} movement initialized: {movement_monitor_initialized}"
	    SET_GCODE_VARIABLE MACRO=FAN_FLAGS VARIABLE=all_initialized VALUE=1
	  {% endif %}

	UPDATE_DELAYED_GCODE ID=flag_states DURATION=60
#variable_all_initialized
########################################
# Startup Auto-Init
########################################
[delayed_gcode startup_fan_init]
initial_duration: 1
gcode:
  SET_GCODE_VARIABLE MACRO=FAN_FLAGS VARIABLE=movement VALUE=0
  SET_GCODE_VARIABLE MACRO=FAN_FLAGS VARIABLE=hotend VALUE=0
  UPDATE_DELAYED_GCODE ID=hotend_monitor DURATION=1
  UPDATE_DELAYED_GCODE ID=movement_monitor DURATION=1
  UPDATE_DELAYED_GCODE ID=smart_fan_control DURATION=1
  UPDATE_DELAYED_GCODE ID=flag_states DURATION=1
####################################################



###############################################################

[safe_z_home]
home_xy_position = 110,110
speed = 150
#z_hop = 20
#z_hop_speed = 10

[gcode_macro Z_UP]
description: Z up before homing
gcode:
  G90
  SET_KINEMATIC_POSITION Z=0
  G0 Z10 F600
  M84

[gcode_macro MANUAL_MESH_START]
gcode = 
	G28
	BED_MESH_CALIBRATE METHOD=MANUAL
	TESTZ Z=-5

[gcode_macro DECREASE_Z_POS]
gcode = 
	TESTZ Z=-0.025

[gcode_macro INCREASE_Z_POS]
gcode = 
	TESTZ Z=0.025

[gcode_macro NEXT_PROBE_POS]
gcode = 
	ACCEPT
	TESTZ Z=-5

[verify_heater extruder]
max_error = 200
check_gain_time = 40

[gcode_macro PRINT_END]
gcode = 
	M140 S0
	M104 S0
	M106 S0
	G91
	G1 X-2 Y-2 E-3 F300
	G1 Z10 F3000
	G90
	M84
	START_MONITOR_LOOPS

[gcode_macro PRINT_START]
gcode = 
	G92 E0 ; Reset Extruder
	{% set BED_TEMP = params.BED_TEMP|default(60)|float %}
	{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(205)|float %}
	M190 S{BED_TEMP} ;Wait for bed to reach temp before proceeding
	STOP_MONITOR_LOOPS
	MANUAL_FAN_ON
	G28 ; Home all axes
	M140 S0
	BED_MESH_CALIBRATE ADAPTIVE=1 ; adaptive mesh
	G1 Z35.0 F3000
	M140 S{BED_TEMP}
	G4 P6000
	M104 S{EXTRUDER_TEMP} ;Start heating extruder
	G1 Z5.0 F3000 ; Move Z Axis down
	BRUSH_NOZZLE
	G1 X50 Y222 F5000.0 ; Move to start position
	M109 S{EXTRUDER_TEMP} ;Wait for extruder to reach temp before proceeding
	PRIME
	G92 E0 ; Reset Extruder
	G1 Z5.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed

[gcode_macro BRUSH_NOZZLE]
variable_x1 = 126
variable_x2 = 151
variable_y1 = 223
variable_z1 = 2.0
gcode = 
	M400  ;wait for buffer to clear
	{% if "xyz" not in printer.toolhead.homed_axes %}
	G28         ;home axes before travel moves
	{% endif %}
	G90
	G0 Z5 F3600     ;ensure nozzle is above endstop pin
	G0 X{x1} Y{y1}  ;right position
	G0 Z{z1}        ;move down, ready for brushing
	M117 Brushing Nozzle
	G0 X{x2} F5000  ;move right
	G0 X{x1}        ;move left
	G0 X{x2}        ;move right
	G0 X{x1}        ;move left
	G0 X{x2}        ;move right
	G0 X{x1}        ;move left
	G0 X{x2}        ;move right
	G0 X{x1}        ;move left
	G0 X{x2}        ;move right
	G0 Z5 F3600     ;raise nozzle when done
	G0 Y210 F3600
	M117 Nozzle Cleaned

[gcode_macro PRIME_LINE]
variable_xstart = 70
variable_ystart = 223
gcode = 
	M400
	G92 E0.0 ; reset extruder
	G90
	G1 Z5 F3600
	G1 X{xstart} Y{ystart} F6000.0 ; start position
	G1 Z0.8 F3000
	G1 X{xstart+30} Y{ystart} E30 F360.0 ; extrude 30mm of filament in the x direction
	G92 E0.0 ; reset extruder
	G1 E-0.5 F2100 ; small retraction
	G1 X{xstart+40} F6000.0 ; move an additional 10mm without extruding
	G92 E0.0 ; reset extruder

[gcode_macro PRIME]
gcode = 
	PRIME_LINE
	BRUSH_NOZZLE

[gcode_macro M73]
rename_existing = M73.1
variable_p = 0.0
variable_r = 0.0
gcode = 
	{% set P = params.P|default(0)|int %}
	{% set R = params.R|default(0)|int %}
	M73.1 P{P}
	SET_GCODE_VARIABLE MACRO=M73 VARIABLE=p VALUE={P}
	SET_GCODE_VARIABLE MACRO=M73 VARIABLE=r VALUE={R}

[gcode_macro TEST_SPEED]
description = Test for max speed and acceleration parameters for the printer. Procedure: Home -> ReadPositionFromMCU -> MovesToolhead@Vel&Accel -> Home -> ReadPositionfromMCU
gcode = 
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	{% set iterations = params.ITERATIONS|default(5)|int %}
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	{% set min_cruise_ratio = params.MIN_CRUISE_RATIO|default(0.5)|float %}
	{% set bound = params.BOUND|default(20)|int %}
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	{% set x_min = printer.toolhead.axis_minimum.x %}
	{% if x_min < 0 %}
	{% set x_min = 0 %}
	{% endif %}
	{% set y_min = printer.toolhead.axis_minimum.y %}
	{% if y_min < 0 %}
	{% set y_min = 0 %}
	{% endif %}
	{% set x_min = x_min + bound %}
	{% set x_max = printer.toolhead.axis_maximum.x - bound %}
	{% set y_min = y_min + bound %}
	{% set y_max = printer.toolhead.axis_maximum.y - bound %}
	{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
	{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
	{% set x_center_min = x_center - (smallpatternsize/2) %}
	{% set x_center_max = x_center + (smallpatternsize/2) %}
	{% set y_center_min = y_center - (smallpatternsize/2) %}
	{% set y_center_max = y_center + (smallpatternsize/2) %}
	SAVE_GCODE_STATE NAME=TEST_SPEED
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	M400
	G28
	{% if printer.configfile.settings.quad_gantry_level %}
	{% if printer.quad_gantry_level.applied == False %}
	QUAD_GANTRY_LEVEL
	G28 Z
	{% endif %}
	{% endif %}
	G90
	G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
	M400
	G28 X Y
	G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
	G4 P1000
	GET_POSITION
	G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}
	{% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} MINIMUM_CRUISE_RATIO={min_cruise_ratio}
	{% else %}
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}
	{% endif %}
	{% for i in range(iterations) %}
	G0 X{x_min} Y{y_min} F{speed*60}
	G0 X{x_max} Y{y_max} F{speed*60}
	G0 X{x_min} Y{y_min} F{speed*60}
	G0 X{x_max} Y{y_min} F{speed*60}
	G0 X{x_min} Y{y_max} F{speed*60}
	G0 X{x_max} Y{y_min} F{speed*60}
	G0 X{x_min} Y{y_min} F{speed*60}
	G0 X{x_min} Y{y_max} F{speed*60}
	G0 X{x_max} Y{y_max} F{speed*60}
	G0 X{x_max} Y{y_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_min} F{speed*60}
	G0 X{x_center_min} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_max} F{speed*60}
	G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}
	{% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio}
	{% else %}
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}
	{% endif %}
	M400
	G28
	G90
	G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
	G4 P1000
	GET_POSITION
	RESTORE_GCODE_STATE NAME=TEST_SPEED

[gcode_macro PAUSE]
description = Pause the actual running print
rename_existing = PAUSE_BASE
variable_extrude = 1.0
gcode = 
	{% set E = printer["gcode_macro PAUSE"].extrude|float %}
	{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
	{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - 2.0) %}
	{% set z_safe = 2.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	PAUSE_BASE
	G91
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{E} F2100
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	{% if "xyz" in printer.toolhead.homed_axes %}
	G1 Z{z_safe} F900
	G90
	G1 X{x_park} Y{y_park} F6000
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro CANCEL_PRINT]
description = Cancel the actual running print
rename_existing = CANCEL_PRINT_BASE
gcode = 
	TURN_OFF_HEATERS
	CANCEL_PRINT_BASE

[gcode_macro _OBICO_LAYER_CHANGE]
description = Run a scan across the current print area
variable_first_layer_scan_retract_length = 6
variable_first_layer_scan_retract_speed = 15
variable_first_layer_scan_cooldown_temp = 170
variable_first_layer_scan_resume_speed = 50
variable_first_layer_scan_enabled = True
variable_first_layer_scan_stepover = 10
variable_first_layer_scan_speed = 10
variable_first_layer_scan_zhop = 4
variable_first_layer_scan_zhop_speed = 15
variable_verbose = False
variable_current_layer = -1
variable_first_layer_scanning = False
variable_wait = {'resume': "RESUME", 'absolute_coordinates': True, 'absolute_extrude': True, 'e': 0.0, 'previous_temp': 0}
gcode = 
	{% set pause_macro  = "PAUSE"  if printer.configfile.settings['gcode_macro pause']  is not defined
	else printer.configfile.settings['gcode_macro pause'].rename_existing %}
	{% set resume_macro = "RESUME" if printer.configfile.settings['gcode_macro resume'] is not defined
	else printer.configfile.settings['gcode_macro resume'].rename_existing %}
	{% set current_layer_default = printer.print_stats.info.current_layer if printer.print_stats.info.current_layer is not none else -1 %}
	{% set current_layer = params.CURRENT_LAYER|default(current_layer_default)|int %}
	{% set polygon_points = printer.exclude_object.objects|map(attribute='polygon')|sum(start=[]) if printer.exclude_object is defined else [] %}
	{% set min_x = params.MINX|default(polygon_points|map(attribute=0)|min|default(printer.toolhead.axis_minimum.x))|float %}
	{% set min_y = params.MINY|default(polygon_points|map(attribute=1)|min|default(printer.toolhead.axis_minimum.y))|float %}
	{% set max_x = params.MAXX|default(polygon_points|map(attribute=0)|max|default(printer.toolhead.axis_maximum.x))|float %}
	{% set max_y = params.MAXY|default(polygon_points|map(attribute=1)|max|default(printer.toolhead.axis_maximum.y))|float %}
	{% set stepoverCount = ((max_y - min_y) / first_layer_scan_stepover|float)|round(method='ceil')|int %}
	{% if verbose %} RESPOND PREFIX='OBICO DEBUG:' MSG='{"Layer %d" % (current_layer)}' {% endif %}
	SET_GCODE_VARIABLE MACRO=_OBICO_LAYER_CHANGE VARIABLE=current_layer VALUE={current_layer}
	{% if first_layer_scan_enabled and current_layer == 2 %}
	SET_GCODE_VARIABLE MACRO=_OBICO_LAYER_CHANGE VARIABLE=first_layer_scanning VALUE=True
	{% set wait_dic = {'resume'              : resume_macro,
	'absolute_coordinates': printer.gcode_move.absolute_coordinates,
	'absolute_extrude'    : printer.gcode_move.absolute_extrude,
	'e'                   : printer.gcode_move.gcode_position.e,
	'previous_temp'       : printer.extruder.target} %}
	SET_GCODE_VARIABLE MACRO=_OBICO_LAYER_CHANGE VARIABLE=wait VALUE="{wait_dic}"
	{% if verbose %} RESPOND PREFIX='OBICO DEBUG:' MSG="Prepare scanning" {% endif %}
	{% if verbose %} RESPOND PREFIX='OBICO DEBUG:' MSG='{"Scan Coordinates: Min:[%.3f:%.3f] Max:[%.3f:%.3f]" % (min_x,min_y,max_x,max_y)}' {% endif %}
	{% if printer[printer.toolhead.extruder].can_extrude %}
	{% if verbose %} RESPOND PREFIX='OBICO DEBUG:' MSG='{"Retract %.1fmm filament" % first_layer_scan_retract_length|abs}' {% endif %}
	M83 ; insure relative extrusion
	G0 E-{first_layer_scan_retract_length|abs} F{first_layer_scan_retract_speed|float * 60}
	{% endif %}
	G91
	G0 Z{first_layer_scan_zhop|abs} F{first_layer_scan_zhop_speed|float * 60}
	M106 S255
	{% if verbose %} RESPOND PREFIX='OBICO DEBUG:' MSG='{"Fan on and lowering temperature to %.1f" % first_layer_scan_cooldown_temp}' {% endif %}
	M104 S{first_layer_scan_cooldown_temp}
	M109 S{first_layer_scan_cooldown_temp} ; Wait for temperature to reach 170
	{pause_macro} ; call the basic klipper PAUSE gcode
	{% if verbose %} RESPOND PREFIX='OBICO DEBUG:' MSG="Start scanning" {% endif %}
	UPDATE_DELAYED_GCODE ID=_WAIT_OBICO_LAYER_CHANGE DURATION=1.0
	G90
	G0 X{min_x} Y{min_y} F{first_layer_scan_resume_speed|float * 60}
	{% for ystep in range(stepoverCount) %}
	G0 Y{min_y + first_layer_scan_stepover|float * ystep} F{first_layer_scan_speed|float * 60}
	G0 X{max_x if ystep % 2 == 0 else min_x}              F{first_layer_scan_speed|float * 60}
	{% endfor %}
	{% if verbose %} RESPOND PREFIX='OBICO DEBUG:' MSG="Finish scanning" {% endif %}
	SET_GCODE_VARIABLE MACRO=_OBICO_LAYER_CHANGE VARIABLE=first_layer_scanning VALUE=False
	{% endif %}

[delayed_gcode _WAIT_OBICO_LAYER_CHANGE]
gcode = 
	{% set lc_macro = printer['gcode_macro _OBICO_LAYER_CHANGE'] %}
	{% if lc_macro.first_layer_scanning %}
	{% if lc_macro.verbose %} RESPOND PREFIX='OBICO DEBUG:' MSG="Waiting for first layer scan..." {% endif %}
	UPDATE_DELAYED_GCODE ID=_WAIT_OBICO_LAYER_CHANGE DURATION=1.0
	{% else %}
	M107
	{% if lc_macro.verbose %} RESPOND PREFIX='OBICO DEBUG:' MSG="Fan off and resume print" {% endif %}
	{% if lc_macro.verbose %} RESPOND PREFIX='OBICO DEBUG:' MSG='{"Call %s VELOCITY=%.1f" % (lc_macro.wait.resume, lc_macro.first_layer_scan_resume_speed)}' {% endif %}
	{lc_macro.wait.resume} VELOCITY={lc_macro.first_layer_scan_resume_speed} ; call the basic klipper RESUME gcode
	G91
	G0 Z-{lc_macro.first_layer_scan_zhop|abs} F{lc_macro.first_layer_scan_zhop_speed|float * 60}
	{% if printer[printer.toolhead.extruder].can_extrude %}
	{% set first_layer_scan_unretract_length = lc_macro.first_layer_scan_retract_length + 0.5 %} ; unretract a bit more
	{% if lc_macro.verbose %} RESPOND PREFIX='OBICO DEBUG:' MSG='{"Extrude %.1fmm filament" % first_layer_scan_unretract_length|abs}' {% endif %}
	M83
	G0 E{first_layer_scan_unretract_length|abs} F{lc_macro.first_layer_scan_retract_speed|float * 60}
	{% endif %}
	M104 S{lc_macro.wait.previous_temp}
	M109 S{lc_macro.wait.previous_temp} ; Wait for the previous temperature to be reached
	{% if lc_macro.verbose %} RESPOND PREFIX='OBICO DEBUG:' MSG='{"Heating back up to previous temperature"}' {% endif %}
	{% if lc_macro.wait.absolute_coordinates %} G90 {% endif %}
	{% if lc_macro.wait.absolute_extrude %}
	M82
	G92 E{lc_macro.wait.e} ; restore the e value in absolute mode
	{% endif %}
	{% endif %}

[gcode_macro OBICO_LINK_STATUS]
description = Link to Obico server
variable_one_time_passcode = ''
variable_one_time_passlink = ''
variable_is_linked = False
gcode = 
	{action_respond_info('Obico one_time_passcode: {}'.format(one_time_passcode))}
	{action_respond_info('Obico one_time_passlink: {}'.format(one_time_passlink))}
	{action_respond_info('Obico is_linked: {}'.format(is_linked))}
	{% if not is_linked and one_time_passcode != '' %}
	M117 Code: {one_time_passcode}
	{% else %}
	M117 Obico linked
	{% endif %}

[gcode_macro _OBICO_RELINK]
description = Re-link to Obico server
gcode = 
	{action_respond_info('WARNING: Re-link to Obico server')}
	{action_call_remote_method("obico_remote_event", event_name='relink_obico', message='')}
	{action_respond_info('WARNING: relink_obico requested')}

# printer.cfg

[gcode_macro SET_ACTIVE_SPOOL]
gcode:
  {% if params.ID %}
    {% set id = params.ID|int %}
    {action_call_remote_method(
       "spoolman_set_active_spool",
       spool_id=id
    )}
  {% else %}
    {action_respond_info("Parameter 'ID' is required")}
  {% endif %}

[gcode_macro CLEAR_ACTIVE_SPOOL]
gcode:
  {action_call_remote_method(
    "spoolman_set_active_spool",
    spool_id=None
  )}

[input_shaper]
shaper_type_y = mzv
shaper_freq_y = 32.0
shaper_type_x = 2hump_ei
shaper_freq_x = 64.0

#[delayed_gcode startup_fan_init]
#initial_duration: 1
#gcode:
#  RESPOND MSG="üöÄ Auto-starting fan control loops after Klipper boot"
#  UPDATE_DELAYED_GCODE ID=hotend_monitor DURATION=1
#  UPDATE_DELAYED_GCODE ID=movement_monitor DURATION=1
#  UPDATE_DELAYED_GCODE ID=smart_fan_control DURATION=1
##################################

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [probe]
#*# z_offset = 17.375
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.021162, 0.027096, -0.043220, -0.055463, -0.055128
#*# 	  0.232412, 0.114596, 0.018030, -0.055463, -0.135128
#*# 	  0.338662, 0.174596, 0.023030, -0.069213, -0.056378
#*# 	  0.267412, 0.020846, -0.094470, -0.125463, -0.058878
#*# 	  0.051162, -0.105404, -0.186970, -0.194213, -0.047628
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 10.0
#*# max_x = 208.0
#*# min_y = 6.0
#*# max_y = 202.0
