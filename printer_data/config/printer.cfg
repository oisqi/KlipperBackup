[include fluidd.cfg]

#[include accelerometer.cfg]

[virtual_sdcard]
path: /home/oisqintursotin/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[include moonraker_obico_macros.cfg]

[force_move]
enable_force_move = True

[display_status]

[exclude_object]

[virtual_sdcard]
path = /home/oisqintursotin/printer_data/gcodes

[pause_resume]

[gcode_arcs]
resolution = 0.1

[include macro.cfg]

[temperature_sensor raspberry_pi]
sensor_type = temperature_host
min_temp = 10
max_temp = 100

[stepper_x]
step_pin = PF0
dir_pin = !PF1
enable_pin = !PD7
microsteps = 16
rotation_distance = 40
endstop_pin = ^!PE5
position_endstop = 0
position_min = -7
position_max = 225
homing_speed = 30.0

[stepper_y]
step_pin = PF6
dir_pin = PF7
enable_pin = !PF2
microsteps = 16
rotation_distance = 40
endstop_pin = ^!PL7
position_endstop = 0.9
position_max = 225
homing_speed = 30.0

[stepper_z]
step_pin = PL3
dir_pin = PL1
enable_pin = !PK0
microsteps = 16
rotation_distance = 8
endstop_pin = probe:z_virtual_endstop
position_max = 175
homing_speed = 5.0
position_min = -15.75

[stepper_z1]
step_pin = PC1
dir_pin = PC3
enable_pin = !PC7
microsteps = 16
rotation_distance = 8

[probe]
pin = ^PL6
x_offset = 23
y_offset = -16
deactivate_on_each_sample:True
speed = 4.0
samples = 2
sample_retract_dist = 2.5
lift_speed = 15.0
samples_result = median
samples_tolerance = 0.010
samples_tolerance_retries = 2
#z_offset = 0
activate_gcode:
	SET_SERVO SERVO=my_servo ANGLE=115
	G4 P250
#   A list of G-Code commands to execute prior to each probe attempt.
#   See docs/Command_Templates.md for G-Code format. This may be
#   useful if the probe needs to be activated in some way. Do not
#   issue any commands here that move the toolhead (eg, G1). The
#   default is to not run any special G-Code commands on activation.
deactivate_gcode:
	SET_SERVO SERVO=my_servo ANGLE=35
#	SET_SERVO SERVO=my_servo ANGLE=30
#   A list of G-Code commands to execute after each probe attempt
#   completes. See docs/Command_Templates.md for G-Code format. Do not
#   issue any commands here that move the toolhead. The default is to
#   not run any special G-Code commands on deactivation.

[servo my_servo]
pin:PB5
#   PWM output pin controlling the servo. This parameter must be
#   provided.
maximum_servo_angle: 160
#   The maximum angle (in degrees) that this servo can be set to. The
#   default is 180 degrees.
#minimum_pulse_width: 0.001
#   The minimum pulse width time (in seconds). This should correspond
#   with an angle of 0 degrees. The default is 0.001 seconds.
#maximum_pulse_width: 0.002
#   The maximum pulse width time (in seconds). This should correspond
#   with an angle of maximum_servo_angle. The default is 0.002
#   seconds.
initial_angle:35
#   Initial angle (in degrees) to set the servo to. The default is to
#   not send any signal at startup.
#initial_pulse_width:
#   Initial pulse width time (in seconds) to set the servo to. (This
#   is only valid if initial_angle is not set.) The default is to not
#   send any signal at startup.

#[probe]
#pin = ^PD3
#x_offset = 0
#y_offset = 0
#speed = 8.0
#samples = 2
#sample_retract_dist = 3
#samples_result = median
#samples_tolerance = 0.010
#samples_tolerance_retries = 2
#z_offset = 0

#[bltouch]
#sensor_pin:^PD3
#   Pin connected to the BLTouch sensor pin. Most BLTouch devices
#   require a pullup on the sensor pin (prefix the pin name with "^").
#   This parameter must be provided.
#control_pin:PB5
#   Pin connected to the BLTouch control pin. This parameter must be
#   provided.
#pin_move_time: 0.680
#   The amount of time (in seconds) to wait for the BLTouch pin to
#   move up or down. The default is 0.680 seconds.
#stow_on_each_sample: True
#   This determines if Klipper should command the pin to move up
#   between each probe attempt when performing a multiple probe
#   sequence. Read the directions in docs/BLTouch.md before setting
#   this to False. The default is True.
#probe_with_touch_mode: False
#   If this is set to True then Klipper will probe with the device in
#   "touch_mode". The default is False (probing in "pin_down" mode).
#pin_up_reports_not_triggered: False
#   Set if the BLTouch consistently reports the probe in a "not
#   triggered" state after a successful "pin_up" command. This should
#   be True for all genuine BLTouch devices. Read the directions in
#   docs/BLTouch.md before setting this to False. The default is True.
#pin_up_touch_mode_reports_triggered: False
#   Set if the BLTouch consistently reports a "triggered" state after
#   the commands "pin_up" followed by "touch_mode". This should be
#   True for all genuine BLTouch devices. Read the directions in
#   docs/BLTouch.md before setting this to False. The default is True.
#set_output_mode:
#   Request a specific sensor pin output mode on the BLTouch V3.0 (and
#   later). This setting should not be used on other types of probes.
#   Set to "5V" to request a sensor pin output of 5 Volts (only use if
#   the controller board needs 5V mode and is 5V tolerant on its input
#   signal line). Set to "OD" to request the sensor pin output use
#   open drain mode. The default is to not request an output mode.
#x_offset:21
#y_offset:-16
#z_offset:0
#speed:6
#lift_speed:10
#samples:3
#sample_retract_dist:3
#samples_result:median
#samples_tolerance:
#samples_tolerance_retries:
#   See the "probe" section for information on these parameters.

##Filament runout sensor

[filament_switch_sensor filament]
pause_on_runout: True
#   When set to True, a PAUSE will execute immediately after a runout
#   is detected. Note that if pause_on_runout is False and the
#   runout_gcode is omitted then runout detection is disabled. Default
#   is True.
#runout_gcode:
#   A list of G-Code commands to execute after a filament runout is
#   detected. See docs/Command_Templates.md for G-Code format. If
#   pause_on_runout is set to True this G-Code will run after the
#   PAUSE is complete. The default is not to run any G-Code commands.
#insert_gcode:
#   A list of G-Code commands to execute after a filament insert is
#   detected. See docs/Command_Templates.md for G-Code format. The
#   default is not to run any G-Code commands, which disables insert
#   detection.
#event_delay: 3.0
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
#pause_delay: 0.5
#   The amount of time to delay, in seconds, between the pause command
#   dispatch and execution of the runout_gcode. It may be useful to
#   increase this delay if OctoPrint exhibits strange pause behavior.
#   Default is 0.5 seconds.
#debounce_delay:
#   A period of time in seconds to debounce events prior to running the
#   switch gcode. The switch must he held in a single state for at least
#   this long to activate. If the switch is toggled on/off during this delay,
#   the event is ignored. Default is 0.
switch_pin:^PB2
#   The pin on which the switch is connected. This parameter must be
#   provided.

[bed_mesh]
speed = 100
horizontal_move_z = 5
mesh_min = 23,21
mesh_max = 212,197
probe_count = 5,5
adaptive_margin = 5
mesh_pps = 2,2
algorithm = bicubic
bicubic_tension = 0.2
fade_start = 1.0
fade_end = 10.0
move_check_distance = 3
split_delta_z = .025

[axis_twist_compensation]
calibrate_start_x = 23
calibrate_end_x = 215
calibrate_y = 110
#z_compensations = 0.014583, -0.000417, -0.014167
#compensation_start_x = 23.0
#compensation_end_x = 210.0

[z_tilt]
z_positions = 
	-4,110
	228,110
points = 
	0,110
	188,110
speed = 60
horizontal_move_z = 10
retries = 5
retry_tolerance = 0.05

[bed_screws]
screw1 = 5,6
screw2 = 5,210
screw3 = 213,210
screw4 = 213,6

[screws_tilt_adjust]
screw1 = 0,22
screw1_name = front left screw
screw2 = 0,225
screw2_name = back left screw
screw3 = 188,225
screw3_name = back right screw
screw4 = 188,22
screw4_name = front right screw
horizontal_move_z = 18

[extruder]
step_pin = PA4
dir_pin = PA6
enable_pin = !PA2
microsteps = 16
rotation_distance = 7.7673975
nozzle_diameter = 0.400
filament_diameter = 1.750
heater_pin = PB4
#sensor_type = ATC Semitec 104GT-2
sensor_type: EPCOS 100K B57560G104F
sensor_pin = PK5
min_temp = -100
min_extrude_temp: -100
max_temp = 280
#pressure_advance = 0.03
max_extrude_only_distance = 101
pwm_cycle_time = 0.05
max_extrude_cross_section = 2.9
#control = pid
#pid_kp = 23.960
#pid_ki = 1.238
#pid_kd = 115.906

[heater_bed]
heater_pin = PH5
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PK6
min_temp = 0
max_temp = 115
pwm_cycle_time = 0.1
#control = pid
#pid_kp = 72.125
#pid_ki = 1.498
#pid_kd = 868.207

[fan]
pin = PH6

[mcu]
serial = /dev/ttyUSB0

[printer]
kinematics = cartesian
max_velocity = 500
max_accel = 4500
max_z_velocity = 15
max_z_accel = 60


#[controller_fan stepstick_fan]
#pin = PH4
#stepper = stepper_z, stepper_y, stepper_x, extruder
#heater = extruder
#idle_timeout = 45
#idle_speed = 1
#fan_speed = 1
#kick_start_time = 0.250
#shutdown_speed = 1.0

########################################
# Fan Definition
########################################
#[fan_generic smart_fan]
#pin: PL4
#cycle_time: 0.01
#shutdown_speed: 0

[heater_fan heatbreak_cooling_fan]
pin: PL4
#max_power:
#shutdown_speed:
cycle_time: 0.01
#hardware_pwm:
#kick_start_time:
#off_below:
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#enable_pin:
#   See the "fan" section for a description of the above parameters.
heater: extruder
#   Name of the config section defining the heater that this fan is
#   associated with. If a comma separated list of heater names is
#   provided here, then the fan will be enabled when any of the given
#   heaters are enabled. The default is "extruder".
heater_temp: 50.0
#   A temperature (in Celsius) that the heater must drop below before
#   the fan is disabled. The default is 50 Celsius.
fan_speed: 1.0
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when its associated heater is enabled. The default
#   is 1.0


#[fan_generic exhaust_fan]
#pin: PH4
#cycle_time: 0.01
#shutdown_speed: 0

[controller_fan stepper_fan]
pin: PH4
#max_power:
#shutdown_speed:
cycle_time: 0.01
#hardware_pwm:
#kick_start_time:
#off_below:
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#enable_pin:
#   See the "fan" section for a description of the above parameters.
fan_speed: 1.0
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when a heater or stepper driver is active.
#   The default is 1.0
idle_timeout: 180
#   The amount of time (in seconds) after a stepper driver or heater
#   was active and the fan should be kept running. The default
#   is 30 seconds.
#idle_speed:
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when a heater or stepper driver was active and
#   before the idle_timeout is reached. The default is fan_speed.
heater: extruder
#stepper:
#   Name of the config section defining the heater/stepper that this fan
#   is associated with. If a comma separated list of heater/stepper names
#   is provided here, then the fan will be enabled when any of the given
#   heaters/steppers are enabled. The default heater is "extruder", the
#   default stepper is all of them.

# Part fan off after cooling nozzle
[delayed_gcode part_fan_off]
initial_duration: 0
gcode:
	M106 S0
	UPDATE_DELAYED_GCODE ID=part_fan_off DURATION=0
	RESPOND MSG="Part fan off"

###############################################################

[safe_z_home]
home_xy_position = 110,110
speed = 150
#z_hop = 20
z_hop_speed = 15


[verify_heater extruder]
max_error = 200
check_gain_time = 40

# printer.cfg


[input_shaper]
#shaper_type_y = mzv
#shaper_freq_y = 32.0
#shaper_type_x = 2hump_ei
#shaper_freq_x = 64.0

#[delayed_gcode startup_fan_init]
#initial_duration: 1
#gcode:
#  RESPOND MSG="🚀 Auto-starting fan control loops after Klipper boot"
#  UPDATE_DELAYED_GCODE ID=hotend_monitor DURATION=1
#  UPDATE_DELAYED_GCODE ID=movement_monitor DURATION=1
#  UPDATE_DELAYED_GCODE ID=smart_fan_control DURATION=1
##################################

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [probe]
#*# z_offset = 0.859
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.192161, -0.252884, -0.223606, -0.151100, 0.037865
#*# 	0.132839, -0.074134, -0.142356, -0.044850, 0.152865
#*# 	0.262839, 0.002116, -0.061106, 0.011400, 0.272865
#*# 	0.149089, -0.034134, -0.049856, 0.008900, 0.200365
#*# 	-0.049661, -0.041634, 0.011394, 0.041400, 0.119115
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 23.0
#*# max_x = 212.0
#*# min_y = 21.0
#*# max_y = 197.0
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 29.200
#*# pid_ki = 1.802
#*# pid_kd = 118.261
#*#
#*# [axis_twist_compensation]
#*# z_compensations = 0.054167, -0.013333, -0.040833
#*# compensation_start_x = 23.0
#*# compensation_end_x = 215.0
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 43.8
#*# shaper_type_y = ei
#*# shaper_freq_y = 47.2
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 75.663
#*# pid_ki = 1.994
#*# pid_kd = 717.853
